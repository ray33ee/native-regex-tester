// Hard coded function to match regex '([A-Z][a-z]*)([0-9]+)?'
pub fn symbol_function(str_text: &str, start: usize) -> Option<Vec<Option<(usize, usize)>>> {
    let text = str_text.as_bytes();

    let mut index = start;

    let mut captures = vec![None; 3];

    'main: while index < text.len() {

        //Start counter
        let mut counter = 0;

        let capture_0_start = index + counter;

        {

let capture_1_start = index+counter;

if index + counter + (1 - 1) > text.len() { index += 1; continue 'main; }

if !(text[index+counter] >= 65 && text[index+counter] <= 90) { index += 1; continue; }

counter += 1;

for _ in &text[index + counter..] {
    if index + counter + (1 - 1) > text.len() { index += 1; continue 'main; }

if !(text[index+counter] >= 97 && text[index+counter] <= 122) { break; }

counter += 1;


}

captures[1] = Some((capture_1_start, index + counter));

}

{
    let mut match_count = 0;

    for _ in &text[index + counter..] {
        {

let capture_2_start = index+counter;

{
    let mut found = false;

    for _ in &text[index + counter..] {
        if index + counter + (1 - 1) > text.len() { index += 1; continue 'main; }

if !(text[index+counter] >= 48 && text[index+counter] <= 57) { break; }

counter += 1;


        found = true;
    }

    if !found {
        break;
    }
}

captures[2] = Some((capture_2_start, index + counter));

}



        match_count += 1;

        if match_count == 1 {
            break;
        }
    }

}



        captures[0] = Some((capture_0_start, index+counter));

        return Some(captures);
    }


    None
}